name: Deploy to EC2, install Docker and configure custom DNS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./terraform
    steps:
        - uses: actions/checkout@v4
        - uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: "1.7.1"
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
        - name: Terraform Init
          id: init
          run: terraform init
        
        - name: Terraform Apply
          id: apply
          run: terraform apply --auto-approve true

        - name: write instance ip to inventory
          id: write_to_invetory
          run: PUBLIC_IP=$(terraform output -raw instance_public_ip) && sed -i "s/${{ vars.SUBDOMAIN }}.schoolall.io/$PUBLIC_IP/g" ../ansible/inventory.ini
          
        - name: output instance public ip
          id: public_ip
          run: |
            echo "public_ip=$(terraform output -raw instance_public_ip)" >> "$GITHUB_OUTPUT"
        
        - name:  configure-dns
          uses: dawidd6/action-ansible-playbook@v2
          env:
            PUBLIC_IP: ${{ steps.public_ip.outputs.public_ip }}
            SCHOOLALL_GODDADY_API_KEY: ${{secrets.SCHOOLALL_GODDADY_API_KEY}}
            SCHOOLALL_GODDADY_API_SECRET: ${{ secrets.SCHOOLALL_GODDADY_API_SECRET }}
            ICEJ_GODDADY_API_KEY: ${{secrets.ICEJ_GODDADY_API_KEY}}
            ICEJ_GODDADY_API_SECRET: ${{ secrets.ICEJ_GODDADY_API_SECRET }}
            SCHOOLALL_DOMAIN: ${{ vars.SCHOOLALL_DOMAIN }}
            SCHOOLALL_DOCS_SUBDOMAIN: ${{ vars.SCHOOLALL_SUBDOMAIN }}
            SCHOOLALL_MOCK_SUBDOMAIN: ${{ vars.SCHOOLALL_SUBDOMAIN }}
            ICEJ_DOMAIN: ${{ vars.ICEJ_DOMAIN }}
            ICEJ_MOCK_SUBDOMAIN: ${{ vars.ICEJ_SUBDOMAIN }}
            ICEJ_DOCS_SUBDOMAIN: ${{ vars.ICEJ_SUBDOMAIN }}
          with:
            playbook: playbook.yaml
            directory: ./ansible
            inventory: |
              [local]
              localhost ansible_connection=local

              [local:vars]
              server_ip={{ lookup('env', 'PUBLIC_IP') }}

